{"ast":null,"code":"import _defineProperty from\"D:/dev/uno/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"D:/dev/uno/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import styles from\"./styles.module.css\";import classNames from\"classnames\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var InputPassWithHide=function InputPassWithHide(_ref){var _classNames;var label=_ref.label,value=_ref.value,setValue=_ref.setValue;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),passwordVisible=_useState2[0],setPasswordVisible=_useState2[1];var togglePasswordVisible=function togglePasswordVisible(){setPasswordVisible(!passwordVisible);};return/*#__PURE__*/_jsxs(\"div\",{className:styles.input_container,children:[/*#__PURE__*/_jsx(\"input\",{autoComplete:\"new-password\",id:label,type:passwordVisible?\"text\":\"password\",className:styles.form_input,placeholder:\" \",value:value,onChange:function onChange(event){return setValue(event.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:label,className:styles.form_label,children:label}),/*#__PURE__*/_jsx(\"button\",{className:classNames((_classNames={},_defineProperty(_classNames,styles.form_hideButton,passwordVisible),_defineProperty(_classNames,styles.form_hidePuttonFilled,!passwordVisible),_classNames)),type:\"button\",onClick:togglePasswordVisible})]});};","map":{"version":3,"names":["useState","styles","classNames","InputPassWithHide","label","value","setValue","passwordVisible","setPasswordVisible","togglePasswordVisible","input_container","form_input","event","target","form_label","form_hideButton","form_hidePuttonFilled"],"sources":["D:/dev/uno/src/UI/InputPassWithHide/InputPassWithHide.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const InputPassWithHide = ({ label, value, setValue }) => {\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const togglePasswordVisible = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n  return (\r\n    <div className={styles.input_container}>\r\n      <input\r\n        autoComplete=\"new-password\"\r\n        id={label}\r\n        type={passwordVisible ? \"text\" : \"password\"}\r\n        className={styles.form_input}\r\n        placeholder=\" \"\r\n        value={value}\r\n        onChange={(event) => setValue(event.target.value)}\r\n      />\r\n      <label\r\n        htmlFor={label}\r\n        className={styles.form_label}>\r\n        {label}\r\n      </label>\r\n      <button\r\n        className={classNames({\r\n          [styles.form_hideButton]: passwordVisible,\r\n          [styles.form_hidePuttonFilled]: !passwordVisible,\r\n        })}\r\n        type=\"button\"\r\n        onClick={togglePasswordVisible}></button>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"kMAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAOC,OAAM,KAAM,qBAAqB,CACxC,MAAOC,WAAU,KAAM,YAAY,CAAC,wFAEpC,MAAO,IAAMC,kBAAiB,CAAG,QAApBA,kBAAiB,MAAmC,oBAA7BC,MAAK,MAALA,KAAK,CAAEC,KAAK,MAALA,KAAK,CAAEC,QAAQ,MAARA,QAAQ,CACxD,cAA8CN,QAAQ,CAAC,KAAK,CAAC,wCAAtDO,eAAe,eAAEC,kBAAkB,eAC1C,GAAMC,sBAAqB,CAAG,QAAxBA,sBAAqB,EAAS,CAClCD,kBAAkB,CAAC,CAACD,eAAe,CAAC,CACtC,CAAC,CACD,mBACE,aAAK,SAAS,CAAEN,MAAM,CAACS,eAAgB,wBACrC,cACE,YAAY,CAAC,cAAc,CAC3B,EAAE,CAAEN,KAAM,CACV,IAAI,CAAEG,eAAe,CAAG,MAAM,CAAG,UAAW,CAC5C,SAAS,CAAEN,MAAM,CAACU,UAAW,CAC7B,WAAW,CAAC,GAAG,CACf,KAAK,CAAEN,KAAM,CACb,QAAQ,CAAE,kBAACO,KAAK,QAAKN,SAAQ,CAACM,KAAK,CAACC,MAAM,CAACR,KAAK,CAAC,EAAC,EAClD,cACF,cACE,OAAO,CAAED,KAAM,CACf,SAAS,CAAEH,MAAM,CAACa,UAAW,UAC5BV,KAAK,EACA,cACR,eACE,SAAS,CAAEF,UAAU,6CAClBD,MAAM,CAACc,eAAe,CAAGR,eAAe,8BACxCN,MAAM,CAACe,qBAAqB,CAAG,CAACT,eAAe,eAC/C,CACH,IAAI,CAAC,QAAQ,CACb,OAAO,CAAEE,qBAAsB,EAAU,GACvC,CAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}