{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\uno\\\\src\\\\Components\\\\AddUserForm\\\\AddUserForm.jsx\",\n  _s = $RefreshSig$();\nimport classNames from \"classnames\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser } from \"../../store/Users/Thunks/addUser\";\nimport { FormElem } from \"../FormElem/FormElem\";\nimport { InputText } from \"../../UI/InputText/InputText\";\nimport { InputPhone } from \"../../UI/InputPhone/InputPhone\";\nimport { InputPass } from \"../../UI/InputPass/InputPass\";\nimport { InputRadio } from \"../../UI/InputRadio/InputRadio\";\nimport styles from \"./styles.module.css\";\nimport { isEmpty, isEmail, isMobilePhone } from \"validator\";\nimport { ROLES } from \"../../assets/constants/Fixtires\";\nimport { getCityFransheses } from \"../../store/CityFranshises/Thunks/getCityFransheses\";\nimport { selectCityFranshises } from \"../../store/CityFranshises/selectors\";\nimport { InputSelect } from \"../../UI/InputSelect/InputSelect\";\nimport { InputDataSelect } from \"../../UI/InputDataList/InputDataSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AddUserForm = _ref => {\n  _s();\n  let {\n    togglePopup\n  } = _ref;\n  const cityFran = useSelector(state => selectCityFranshises(state));\n  const cityFranValues = Object.values(cityFran);\n  const {\n    userId,\n    userIdAccess\n  } = localStorage;\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [city, setCity] = useState([]);\n  const [pass, setPass] = useState(\"\");\n  const [role, setRole] = useState(ROLES[0].id);\n  const initialValidate = {\n    validate: undefined,\n    errorMessage: \" \"\n  };\n  const [validate, setValidate] = useState(initialValidate);\n  useEffect(() => {\n    dispatch(getCityFransheses({\n      userId\n    }));\n  }, [userId]);\n  useEffect(() => {\n    if (validate.errorMessage.length < 5 && phone.length > 8) {\n      dispatch(addUser({\n        userId,\n        email,\n        role,\n        name,\n        phone,\n        pass\n      }));\n      togglePopup();\n      resetForm();\n    }\n  }, [validate.errorMessage]);\n  const resetForm = () => {\n    setCity(\"\");\n    setEmail(\"\");\n    setName(\"\");\n    setPass(\"\");\n    setPhone(\"\");\n    setRole(ROLES[0].id);\n  };\n  const handleValidate = () => {\n    if (isEmpty(email) || isEmpty(phone) || isEmpty(pass) || isEmpty(name)) {\n      setValidate({\n        isValid: false,\n        errorMessage: \"Пожалуйста, заполните все поля\"\n      });\n    } else if (!isEmail(email)) {\n      setValidate({\n        isValid: false,\n        errorMessage: \"Неверный формат почты\"\n      });\n    } else if (!isMobilePhone(phone) || phone.length < 10 || phone.length > 14) {\n      setValidate({\n        isValid: false,\n        errorMessage: \"Неверный номер телефона\"\n      });\n    } else setValidate({\n      isValid: true,\n      errorMessage: \"   \"\n    });\n  };\n  const onSubmit = event => {\n    event.preventDefault();\n    handleValidate();\n  };\n  return /*#__PURE__*/_jsxDEV(FormElem, {\n    title: \"Добавление пользователя\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(InputText, {\n      value: name,\n      label: \"Наименование\",\n      setValue: setName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputText, {\n      value: email,\n      label: \"email\",\n      setValue: setEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputPhone, {\n      value: phone,\n      label: \"Телефон\",\n      setValue: setPhone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputDataSelect, {\n      mapValues: cityFranValues,\n      setForm: setCity,\n      label: \"Город\",\n      value: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputPass, {\n      value: pass,\n      label: \"Пароль\",\n      setValue: setPass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.radios_label,\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0440\\u043E\\u043B\\u044C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.radios_container,\n        children: ROLES.slice(userIdAccess == 1 ? 0 : userIdAccess).map(el => {\n          const {\n            content,\n            id\n          } = el;\n          return /*#__PURE__*/_jsxDEV(InputRadio, {\n            label: content,\n            value: id,\n            checked: role === id,\n            setValue: setRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.errorMessage,\n      children: validate.errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: classNames(styles.button, styles.form_submit),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AddUserForm, \"pwwcl79RF6stQCGx7OM5+OY1yv0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = AddUserForm;\nvar _c;\n$RefreshReg$(_c, \"AddUserForm\");","map":{"version":3,"names":["classNames","useEffect","useState","useDispatch","useSelector","addUser","FormElem","InputText","InputPhone","InputPass","InputRadio","styles","isEmpty","isEmail","isMobilePhone","ROLES","getCityFransheses","selectCityFranshises","InputSelect","InputDataSelect","AddUserForm","togglePopup","cityFran","state","cityFranValues","Object","values","userId","userIdAccess","localStorage","dispatch","email","setEmail","name","setName","phone","setPhone","city","setCity","pass","setPass","role","setRole","id","initialValidate","validate","undefined","errorMessage","setValidate","length","resetForm","handleValidate","isValid","onSubmit","event","preventDefault","radios_label","radios_container","slice","map","el","content","button","form_submit"],"sources":["D:/dev/uno/src/Components/AddUserForm/AddUserForm.jsx"],"sourcesContent":["import classNames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addUser } from \"../../store/Users/Thunks/addUser\";\r\nimport { FormElem } from \"../FormElem/FormElem\";\r\nimport { InputText } from \"../../UI/InputText/InputText\";\r\nimport { InputPhone } from \"../../UI/InputPhone/InputPhone\";\r\nimport { InputPass } from \"../../UI/InputPass/InputPass\";\r\nimport { InputRadio } from \"../../UI/InputRadio/InputRadio\";\r\nimport styles from \"./styles.module.css\";\r\nimport { isEmpty, isEmail, isMobilePhone } from \"validator\";\r\nimport { ROLES } from \"../../assets/constants/Fixtires\";\r\nimport { getCityFransheses } from \"../../store/CityFranshises/Thunks/getCityFransheses\";\r\nimport { selectCityFranshises } from \"../../store/CityFranshises/selectors\";\r\nimport { InputSelect } from \"../../UI/InputSelect/InputSelect\";\r\nimport { InputDataSelect } from \"../../UI/InputDataList/InputDataSelect\";\r\n\r\nexport const AddUserForm = ({ togglePopup }) => {\r\n  const cityFran = useSelector((state) => selectCityFranshises(state));\r\n  const cityFranValues = Object.values(cityFran);\r\n  const { userId, userIdAccess } = localStorage;\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [city, setCity] = useState([]);\r\n  const [pass, setPass] = useState(\"\");\r\n  const [role, setRole] = useState(ROLES[0].id);\r\n  const initialValidate = {\r\n    validate: undefined,\r\n    errorMessage: \" \",\r\n  };\r\n  const [validate, setValidate] = useState(initialValidate);\r\n  useEffect(() => {\r\n    dispatch(getCityFransheses({ userId }));\r\n  }, [userId]);\r\n  useEffect(() => {\r\n    if (validate.errorMessage.length < 5 && phone.length > 8) {\r\n      dispatch(addUser({ userId, email, role, name, phone, pass }));\r\n      togglePopup();\r\n      resetForm();\r\n    }\r\n  }, [validate.errorMessage]);\r\n\r\n  const resetForm = () => {\r\n    setCity(\"\");\r\n    setEmail(\"\");\r\n    setName(\"\");\r\n    setPass(\"\");\r\n    setPhone(\"\");\r\n    setRole(ROLES[0].id);\r\n  };\r\n  const handleValidate = () => {\r\n    if (\r\n      isEmpty(email) ||\r\n      isEmpty(phone) ||\r\n      isEmpty(pass) ||\r\n      isEmpty(name)\r\n    ) {\r\n      setValidate({\r\n        isValid: false,\r\n        errorMessage: \"Пожалуйста, заполните все поля\",\r\n      });\r\n    } else if (!isEmail(email)) {\r\n      setValidate({\r\n        isValid: false,\r\n        errorMessage: \"Неверный формат почты\",\r\n      });\r\n    } else if (\r\n      !isMobilePhone(phone) ||\r\n      phone.length < 10 ||\r\n      phone.length > 14\r\n    ) {\r\n      setValidate({\r\n        isValid: false,\r\n        errorMessage: \"Неверный номер телефона\",\r\n      });\r\n    } else setValidate({ isValid: true, errorMessage: \"   \" });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    handleValidate();\r\n  };\r\n\r\n  return (\r\n    <FormElem\r\n      title={\"Добавление пользователя\"}\r\n      onSubmit={onSubmit}>\r\n      <InputText\r\n        value={name}\r\n        label={\"Наименование\"}\r\n        setValue={setName}\r\n      />\r\n      <InputText\r\n        value={email}\r\n        label={\"email\"}\r\n        setValue={setEmail}\r\n      />\r\n      <InputPhone\r\n        value={phone}\r\n        label={\"Телефон\"}\r\n        setValue={setPhone}\r\n      />\r\n      <InputDataSelect\r\n        mapValues={cityFranValues}\r\n        setForm={setCity}\r\n        label={\"Город\"}\r\n        value={city}\r\n      />\r\n      {/* <InputText\r\n        value={cityFran[city].NAME}\r\n        label={\"Город\"}\r\n        setValue={setCity}\r\n      /> */}\r\n      <InputPass\r\n        value={pass}\r\n        label={\"Пароль\"}\r\n        setValue={setPass}\r\n      />\r\n      {\r\n        <>\r\n          <span className={styles.radios_label}>Выберите роль:</span>\r\n          <div className={styles.radios_container}>\r\n            {ROLES.slice(userIdAccess == 1 ? 0 : userIdAccess).map((el) => {\r\n              const { content, id } = el;\r\n              return (\r\n                <InputRadio\r\n                  label={content}\r\n                  value={id}\r\n                  checked={role === id}\r\n                  setValue={setRole}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      }\r\n      <span className={styles.errorMessage}>{validate.errorMessage}</span>\r\n      <button\r\n        type=\"submit\"\r\n        className={classNames(styles.button, styles.form_submit)}>\r\n        Добавить ползователя\r\n      </button>\r\n    </FormElem>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}