{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\uno\\\\src\\\\UI\\\\InputDataList\\\\InputDataSelect.jsx\",\n  _s = $RefreshSig$();\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport { Option } from \"../Option/Option.tsx\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputDataSelect = _ref => {\n  _s();\n  let {\n    mapValues,\n    setForm,\n    size = 1,\n    label,\n    value\n  } = _ref;\n  const [input, setInput] = useState(\"\");\n  const handleChange = e => {\n    const target = e.target.value;\n    console.log(e.target.label);\n    setInput(target);\n    const newValue = () => {\n      if (mapValues.some(el => el.NAME === target)) {\n        setInput(\"\");\n        return value.concat(target);\n      } else {\n        return value;\n      }\n    };\n    setForm(newValue());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.input_container,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: value.map(el => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: el + \" \"\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      list: label,\n      type: \"text\",\n      name: label,\n      value: input,\n      onChange: handleChange,\n      className: styles.form_input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: label,\n      children: mapValues.map(el => /*#__PURE__*/_jsxDEV(Option, {\n        value: el.NAME,\n        label: el.NAME\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: label,\n      className: styles.form_label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(InputDataSelect, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = InputDataSelect;\nvar _c;\n$RefreshReg$(_c, \"InputDataSelect\");","map":{"version":3,"names":["nanoid","useState","Option","styles","InputDataSelect","mapValues","setForm","size","label","value","input","setInput","handleChange","e","target","console","log","newValue","some","el","NAME","concat","input_container","map","form_input","form_label"],"sources":["D:/dev/uno/src/UI/InputDataList/InputDataSelect.jsx"],"sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\nimport { Option } from \"../Option/Option.tsx\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nexport const InputDataSelect = ({\r\n  mapValues,\r\n  setForm,\r\n  size = 1,\r\n  label,\r\n  value,\r\n}) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    const target = e.target.value;\r\n    console.log(e.target.label)\r\n    setInput(target);\r\n    const newValue = () => {\r\n      if (mapValues.some((el) => el.NAME === target)) {\r\n        setInput(\"\");\r\n        return value.concat(target);\r\n      } else {\r\n        return value;\r\n      }\r\n    };\r\n    setForm(newValue());\r\n  };\r\n  return (\r\n    <div className={styles.input_container}>\r\n      <p>\r\n        {value.map((el) => (\r\n          <span key={nanoid()}>{el + \" \"}</span>\r\n        ))}\r\n      </p>\r\n      <input\r\n        list={label}\r\n        type=\"text\"\r\n        name={label}\r\n        value={input}\r\n        onChange={handleChange}\r\n        className={styles.form_input}\r\n      />\r\n      <datalist id={label}>\r\n        {mapValues.map((el) => (\r\n          <Option\r\n            value={el.NAME}\r\n            label={el.NAME}\r\n            key={nanoid()}\r\n          />\r\n        ))}\r\n      </datalist>\r\n      <label\r\n        htmlFor={label}\r\n        className={styles.form_label}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAEzC,OAAO,MAAMC,eAAe,GAAG,QAMzB;EAAA;EAAA,IAN0B;IAC9BC,SAAS;IACTC,OAAO;IACPC,IAAI,GAAG,CAAC;IACRC,KAAK;IACLC;EACF,CAAC;EACC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,MAAM,GAAGD,CAAC,CAACC,MAAM,CAACL,KAAK;IAC7BM,OAAO,CAACC,GAAG,CAACH,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC;IAC3BG,QAAQ,CAACG,MAAM,CAAC;IAChB,MAAMG,QAAQ,GAAG,MAAM;MACrB,IAAIZ,SAAS,CAACa,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,KAAKN,MAAM,CAAC,EAAE;QAC9CH,QAAQ,CAAC,EAAE,CAAC;QACZ,OAAOF,KAAK,CAACY,MAAM,CAACP,MAAM,CAAC;MAC7B,CAAC,MAAM;QACL,OAAOL,KAAK;MACd;IACF,CAAC;IACDH,OAAO,CAACW,QAAQ,EAAE,CAAC;EACrB,CAAC;EACD,oBACE;IAAK,SAAS,EAAEd,MAAM,CAACmB,eAAgB;IAAA,wBACrC;MAAA,UACGb,KAAK,CAACc,GAAG,CAAEJ,EAAE,iBACZ;QAAA,UAAsBA,EAAE,GAAG;MAAG,GAAnBnB,MAAM,EAAE;QAAA;QAAA;QAAA;MAAA,QACpB;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,eACJ;MACE,IAAI,EAAEQ,KAAM;MACZ,IAAI,EAAC,MAAM;MACX,IAAI,EAAEA,KAAM;MACZ,KAAK,EAAEE,KAAM;MACb,QAAQ,EAAEE,YAAa;MACvB,SAAS,EAAET,MAAM,CAACqB;IAAW;MAAA;MAAA;MAAA;IAAA,QAC7B,eACF;MAAU,EAAE,EAAEhB,KAAM;MAAA,UACjBH,SAAS,CAACkB,GAAG,CAAEJ,EAAE,iBAChB,QAAC,MAAM;QACL,KAAK,EAAEA,EAAE,CAACC,IAAK;QACf,KAAK,EAAED,EAAE,CAACC;MAAK,GACVpB,MAAM,EAAE;QAAA;QAAA;QAAA;MAAA,QAEhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACO,eACX;MACE,OAAO,EAAEQ,KAAM;MACf,SAAS,EAAEL,MAAM,CAACsB,UAAW;MAAA,UAC5BjB;IAAK;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GArDWJ,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}