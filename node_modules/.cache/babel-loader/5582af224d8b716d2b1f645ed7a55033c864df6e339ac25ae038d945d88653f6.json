{"ast":null,"code":"import { getDiffDates } from \"./getDiffDates.ts\";\nexport const getLeftMonth = _ref => {\n  let {\n    start,\n    end\n  } = _ref;\n  if (!start || !end) {\n    return {\n      months: 0,\n      leftDays: 0\n    };\n  }\n  const diff = getDiffDates({\n    start,\n    end\n  });\n  let months = \"\";\n  const days = diff / 86400000;\n  let month = Math.floor(days / 30);\n  let leftDays = Math.floor(days / 30 - month);\n  if (leftDays[-1] === 1) {\n    leftDays += \" День\";\n  } else if (2 <= leftDays[-1] && leftDays[-1] <= 4) {\n    leftDays += \" Дня\";\n  } else {\n    leftDays += \" Дней\";\n  }\n  if (month === 0) {\n    months = \"Пакет не активен\";\n  } else if (month === 1) {\n    months += \" Месяц\";\n  } else if (2 <= month && month <= 4) {\n    months += \" Месяца\";\n  } else {\n    months += \" Месяцев\";\n  }\n  return {\n    months,\n    leftDays\n  };\n};","map":{"version":3,"names":["getDiffDates","getLeftMonth","start","end","months","leftDays","diff","days","month","Math","floor"],"sources":["D:/dev/uno/src/helpers/getLeftMonth.ts"],"sourcesContent":["import { getDiffDates } from \"./getDiffDates.ts\";\r\n\r\ninterface Dates {\r\n  start: Date;\r\n  end: Date;\r\n}\r\n\r\nexport const getLeftMonth = ({ start, end }: Dates) => {\r\n  if (!start || !end) {\r\n    return {\r\n      months: 0,\r\n      leftDays: 0,\r\n    };\r\n  }\r\n  const diff: number = getDiffDates({ start, end });\r\n  let months: string = \"\";\r\n\r\n  const days = diff / 86400000;\r\n  let month = Math.floor(days / 30);\r\n  let leftDays: any = Math.floor(days / 30 - month);\r\n  if (leftDays[-1] === 1) {\r\n    leftDays += \" День\";\r\n  } else if (2 <= leftDays[-1] && leftDays[-1] <= 4) {\r\n    leftDays += \" Дня\";\r\n  } else {\r\n    leftDays += \" Дней\";\r\n  }\r\n  if (month === 0) {\r\n    months = \"Пакет не активен\";\r\n  } else if (month === 1) {\r\n    months += \" Месяц\";\r\n  } else if (2 <= month && month <= 4) {\r\n    months += \" Месяца\";\r\n  } else {\r\n    months += \" Месяцев\";\r\n  }\r\n  return { months, leftDays };\r\n};\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,mBAAmB;AAOhD,OAAO,MAAMC,YAAY,GAAG,QAA2B;EAAA,IAA1B;IAAEC,KAAK;IAAEC;EAAW,CAAC;EAChD,IAAI,CAACD,KAAK,IAAI,CAACC,GAAG,EAAE;IAClB,OAAO;MACLC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH;EACA,MAAMC,IAAY,GAAGN,YAAY,CAAC;IAAEE,KAAK;IAAEC;EAAI,CAAC,CAAC;EACjD,IAAIC,MAAc,GAAG,EAAE;EAEvB,MAAMG,IAAI,GAAGD,IAAI,GAAG,QAAQ;EAC5B,IAAIE,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,EAAE,CAAC;EACjC,IAAIF,QAAa,GAAGI,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,EAAE,GAAGC,KAAK,CAAC;EACjD,IAAIH,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IACtBA,QAAQ,IAAI,OAAO;EACrB,CAAC,MAAM,IAAI,CAAC,IAAIA,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAIA,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;IACjDA,QAAQ,IAAI,MAAM;EACpB,CAAC,MAAM;IACLA,QAAQ,IAAI,OAAO;EACrB;EACA,IAAIG,KAAK,KAAK,CAAC,EAAE;IACfJ,MAAM,GAAG,kBAAkB;EAC7B,CAAC,MAAM,IAAII,KAAK,KAAK,CAAC,EAAE;IACtBJ,MAAM,IAAI,QAAQ;EACpB,CAAC,MAAM,IAAI,CAAC,IAAII,KAAK,IAAIA,KAAK,IAAI,CAAC,EAAE;IACnCJ,MAAM,IAAI,SAAS;EACrB,CAAC,MAAM;IACLA,MAAM,IAAI,UAAU;EACtB;EACA,OAAO;IAAEA,MAAM;IAAEC;EAAS,CAAC;AAC7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}