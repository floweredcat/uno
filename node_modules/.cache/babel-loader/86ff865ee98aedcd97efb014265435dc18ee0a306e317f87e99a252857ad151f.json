{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\uno\\\\src\\\\Components\\\\InputDataList\\\\InputDataSelect.jsx\",\n  _s = $RefreshSig$();\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { Option } from \"../../UI/Option/Option.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputDataSelect = _ref => {\n  _s();\n  let {\n    mapValues,\n    setForm,\n    label,\n    value\n  } = _ref;\n  const [input, setInput] = useState(\"\");\n  const handleChange = e => {\n    const target = e.target.value;\n    setInput(target);\n    const newValue = () => {\n      if (mapValues.some(el => el === target)) {\n        setInput(\"\");\n        const selectedCityId = mapValues[target];\n        return value.concat(target);\n      } else {\n        return value;\n      }\n    };\n    setForm(newValue());\n  };\n  const aviableCities = mapValues.filter(el => !value.includes(el));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.input_container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      list: label,\n      type: \"text\",\n      name: label,\n      value: input,\n      onChange: handleChange,\n      className: styles.form_input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: label,\n      children: aviableCities.map(el => /*#__PURE__*/_jsxDEV(Option, {\n        value: el,\n        label: el\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: label,\n      className: styles.form_label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(InputDataSelect, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = InputDataSelect;\nvar _c;\n$RefreshReg$(_c, \"InputDataSelect\");","map":{"version":3,"names":["nanoid","useState","styles","Option","InputDataSelect","mapValues","setForm","label","value","input","setInput","handleChange","e","target","newValue","some","el","selectedCityId","concat","aviableCities","filter","includes","input_container","form_input","map","form_label"],"sources":["D:/dev/uno/src/Components/InputDataList/InputDataSelect.jsx"],"sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport {Option} from \"../../UI/Option/Option.tsx\"\r\n\r\nexport const InputDataSelect = ({\r\n  mapValues,\r\n  setForm,\r\n  label,\r\n  value,\r\n}) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    const target = e.target.value;\r\n    setInput(target);\r\n    const newValue = () => {\r\n      if (mapValues.some((el) => el === target)) {\r\n        setInput(\"\");\r\n        const selectedCityId = mapValues[target]\r\n        return value.concat(target);\r\n      } else {\r\n        return value;\r\n      }\r\n    };\r\n    setForm(newValue());\r\n  };\r\n  const aviableCities = mapValues.filter(el => !value.includes(el))\r\n\r\n  return (\r\n    <div className={styles.input_container}>\r\n      <input\r\n        list={label}\r\n        type=\"text\"\r\n        name={label}\r\n        value={input}\r\n        onChange={handleChange}\r\n        className={styles.form_input}\r\n      />\r\n      <datalist id={label}>\r\n        {aviableCities.map((el) => (\r\n          <Option\r\n            value={el}\r\n            label={el}\r\n            key={nanoid()}\r\n          />\r\n        ))}\r\n      </datalist>\r\n      <label\r\n        htmlFor={label}\r\n        className={styles.form_label}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAAQC,MAAM,QAAO,4BAA4B;AAAA;AAEjD,OAAO,MAAMC,eAAe,GAAG,QAKzB;EAAA;EAAA,IAL0B;IAC9BC,SAAS;IACTC,OAAO;IACPC,KAAK;IACLC;EACF,CAAC;EACC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,MAAM,GAAGD,CAAC,CAACC,MAAM,CAACL,KAAK;IAC7BE,QAAQ,CAACG,MAAM,CAAC;IAChB,MAAMC,QAAQ,GAAG,MAAM;MACrB,IAAIT,SAAS,CAACU,IAAI,CAAEC,EAAE,IAAKA,EAAE,KAAKH,MAAM,CAAC,EAAE;QACzCH,QAAQ,CAAC,EAAE,CAAC;QACZ,MAAMO,cAAc,GAAGZ,SAAS,CAACQ,MAAM,CAAC;QACxC,OAAOL,KAAK,CAACU,MAAM,CAACL,MAAM,CAAC;MAC7B,CAAC,MAAM;QACL,OAAOL,KAAK;MACd;IACF,CAAC;IACDF,OAAO,CAACQ,QAAQ,EAAE,CAAC;EACrB,CAAC;EACD,MAAMK,aAAa,GAAGd,SAAS,CAACe,MAAM,CAACJ,EAAE,IAAI,CAACR,KAAK,CAACa,QAAQ,CAACL,EAAE,CAAC,CAAC;EAEjE,oBACE;IAAK,SAAS,EAAEd,MAAM,CAACoB,eAAgB;IAAA,wBACrC;MACE,IAAI,EAAEf,KAAM;MACZ,IAAI,EAAC,MAAM;MACX,IAAI,EAAEA,KAAM;MACZ,KAAK,EAAEE,KAAM;MACb,QAAQ,EAAEE,YAAa;MACvB,SAAS,EAAET,MAAM,CAACqB;IAAW;MAAA;MAAA;MAAA;IAAA,QAC7B,eACF;MAAU,EAAE,EAAEhB,KAAM;MAAA,UACjBY,aAAa,CAACK,GAAG,CAAER,EAAE,iBACpB,QAAC,MAAM;QACL,KAAK,EAAEA,EAAG;QACV,KAAK,EAAEA;MAAG,GACLhB,MAAM,EAAE;QAAA;QAAA;QAAA;MAAA,QAEhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACO,eACX;MACE,OAAO,EAAEO,KAAM;MACf,SAAS,EAAEL,MAAM,CAACuB,UAAW;MAAA,UAC5BlB;IAAK;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GAjDWH,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}