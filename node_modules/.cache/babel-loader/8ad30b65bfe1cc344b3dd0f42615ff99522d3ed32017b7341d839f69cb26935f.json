{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\uno\\\\src\\\\Components\\\\InputDataList\\\\InputDataSelect.jsx\",\n  _s = $RefreshSig$();\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { Option } from \"../../UI/Option/Option.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputDataSelect = _ref => {\n  _s();\n  let {\n    mapValues,\n    setForm,\n    label,\n    value,\n    values\n  } = _ref;\n  const [input, setInput] = useState(\"\");\n  const handleChange = e => {\n    const target = e.target.value;\n    setInput(target);\n    const newValue = () => {\n      if (mapValues.some(el => el.ID === target)) {\n        setInput(\"\");\n        const selectedCityId = values[target].ID;\n        return value.concat(selectedCityId);\n      } else {\n        return value;\n      }\n    };\n    setForm(newValue());\n  };\n  const aviableCities = mapValues.filter(el => value.includes(el.ID));\n  console.log(mapValues, value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.input_container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      list: label,\n      type: \"text\",\n      name: label,\n      value: input,\n      onChange: handleChange,\n      className: styles.form_input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: label,\n      children: aviableCities.map(el => /*#__PURE__*/_jsxDEV(Option, {\n        value: el.NAME,\n        label: el.NAME\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: label,\n      className: styles.form_label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(InputDataSelect, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = InputDataSelect;\nvar _c;\n$RefreshReg$(_c, \"InputDataSelect\");","map":{"version":3,"names":["nanoid","useState","styles","Option","InputDataSelect","mapValues","setForm","label","value","values","input","setInput","handleChange","e","target","newValue","some","el","ID","selectedCityId","concat","aviableCities","filter","includes","console","log","input_container","form_input","map","NAME","form_label"],"sources":["D:/dev/uno/src/Components/InputDataList/InputDataSelect.jsx"],"sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport {Option} from \"../../UI/Option/Option.tsx\"\r\n\r\nexport const InputDataSelect = ({\r\n  mapValues,\r\n  setForm,\r\n  label,\r\n  value,\r\n  values\r\n}) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    const target = e.target.value;\r\n    setInput(target);\r\n    const newValue = () => {\r\n      if (mapValues.some((el) => el.ID === target)) {\r\n        setInput(\"\");\r\n        const selectedCityId = values[target].ID;\r\n        return value.concat(selectedCityId);\r\n      } else {\r\n        return value;\r\n      }\r\n    };\r\n    setForm(newValue());\r\n  };\r\n  const aviableCities = mapValues.filter(el => value.includes(el.ID))\r\n  console.log(mapValues, value)\r\n\r\n  return (\r\n    <div className={styles.input_container}>\r\n      <input\r\n        list={label}\r\n        type=\"text\"\r\n        name={label}\r\n        value={input}\r\n        onChange={handleChange}\r\n        className={styles.form_input}\r\n      />\r\n      <datalist id={label}>\r\n        {aviableCities.map((el) => (\r\n          <Option\r\n            value={el.NAME}\r\n            label={el.NAME}\r\n            key={nanoid()}\r\n          />\r\n        ))}\r\n      </datalist>\r\n      <label\r\n        htmlFor={label}\r\n        className={styles.form_label}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAAQC,MAAM,QAAO,4BAA4B;AAAA;AAEjD,OAAO,MAAMC,eAAe,GAAG,QAMzB;EAAA;EAAA,IAN0B;IAC9BC,SAAS;IACTC,OAAO;IACPC,KAAK;IACLC,KAAK;IACLC;EACF,CAAC;EACC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,MAAM,GAAGD,CAAC,CAACC,MAAM,CAACN,KAAK;IAC7BG,QAAQ,CAACG,MAAM,CAAC;IAChB,MAAMC,QAAQ,GAAG,MAAM;MACrB,IAAIV,SAAS,CAACW,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACC,EAAE,KAAKJ,MAAM,CAAC,EAAE;QAC5CH,QAAQ,CAAC,EAAE,CAAC;QACZ,MAAMQ,cAAc,GAAGV,MAAM,CAACK,MAAM,CAAC,CAACI,EAAE;QACxC,OAAOV,KAAK,CAACY,MAAM,CAACD,cAAc,CAAC;MACrC,CAAC,MAAM;QACL,OAAOX,KAAK;MACd;IACF,CAAC;IACDF,OAAO,CAACS,QAAQ,EAAE,CAAC;EACrB,CAAC;EACD,MAAMM,aAAa,GAAGhB,SAAS,CAACiB,MAAM,CAACL,EAAE,IAAIT,KAAK,CAACe,QAAQ,CAACN,EAAE,CAACC,EAAE,CAAC,CAAC;EACnEM,OAAO,CAACC,GAAG,CAACpB,SAAS,EAAEG,KAAK,CAAC;EAE7B,oBACE;IAAK,SAAS,EAAEN,MAAM,CAACwB,eAAgB;IAAA,wBACrC;MACE,IAAI,EAAEnB,KAAM;MACZ,IAAI,EAAC,MAAM;MACX,IAAI,EAAEA,KAAM;MACZ,KAAK,EAAEG,KAAM;MACb,QAAQ,EAAEE,YAAa;MACvB,SAAS,EAAEV,MAAM,CAACyB;IAAW;MAAA;MAAA;MAAA;IAAA,QAC7B,eACF;MAAU,EAAE,EAAEpB,KAAM;MAAA,UACjBc,aAAa,CAACO,GAAG,CAAEX,EAAE,iBACpB,QAAC,MAAM;QACL,KAAK,EAAEA,EAAE,CAACY,IAAK;QACf,KAAK,EAAEZ,EAAE,CAACY;MAAK,GACV7B,MAAM,EAAE;QAAA;QAAA;QAAA;MAAA,QAEhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACO,eACX;MACE,OAAO,EAAEO,KAAM;MACf,SAAS,EAAEL,MAAM,CAAC4B,UAAW;MAAA,UAC5BvB;IAAK;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GAnDWH,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}