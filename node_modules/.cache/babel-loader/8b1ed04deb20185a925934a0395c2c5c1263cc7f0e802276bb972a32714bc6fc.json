{"ast":null,"code":"import _objectSpread from\"D:/dev/uno/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice}from\"@reduxjs/toolkit\";import{nanoid}from\"nanoid\";var initialState={entities:{},ids:[],status:\"idle\"};export var objectsSlice=createSlice({name:\"objects\",initialState:initialState,reducers:{startLoading:function startLoading(){return{entities:{},ids:[],status:\"loading\"};},successLoading:function successLoading(state,action){var _action$payload=action.payload,entities=_action$payload.entities,ids=_action$payload.ids;return{entities:entities,ids:ids,status:\"success\"};},failLoading:function failLoading(){return{entities:{},ids:[],status:\"fail\"};},addFranshises:function addFranshises(state,action){var franchises=action.payload;return _objectSpread(_objectSpread({},state),{},{franchises:franchises});}}});export var objectsSliceActions=objectsSlice.actions;","map":{"version":3,"names":["createSlice","nanoid","initialState","entities","ids","status","objectsSlice","name","reducers","startLoading","successLoading","state","action","payload","failLoading","addFranshises","franchises","objectsSliceActions","actions"],"sources":["D:/dev/uno/src/store/Objects/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst initialState = {\r\n  entities: {},\r\n  ids: [],\r\n  status: \"idle\",\r\n};\r\n\r\nexport const objectsSlice = createSlice({\r\n  name: \"objects\",\r\n  initialState,\r\n  reducers: {\r\n    startLoading: () => {\r\n      return {\r\n        entities: {},\r\n        ids: [],\r\n        status: \"loading\",\r\n      };\r\n    },\r\n    successLoading: (state, action) => {\r\n      const { entities, ids } = action.payload;\r\n      return {\r\n        entities,\r\n        ids,\r\n        status: \"success\",\r\n      };\r\n    },\r\n    failLoading: () => {\r\n      return {\r\n        entities: {},\r\n        ids: [],\r\n        status: \"fail\",\r\n      };\r\n    },\r\n    addFranshises: (state, action) => {\r\n      const franchises = action.payload\r\n      return {\r\n        ...state,\r\n        franchises,\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport const objectsSliceActions = objectsSlice.actions;"],"mappings":"+FAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,MAAM,KAAQ,QAAQ,CAE/B,GAAMC,aAAY,CAAG,CACnBC,QAAQ,CAAE,CAAC,CAAC,CACZC,GAAG,CAAE,EAAE,CACPC,MAAM,CAAE,MACV,CAAC,CAED,MAAO,IAAMC,aAAY,CAAGN,WAAW,CAAC,CACtCO,IAAI,CAAE,SAAS,CACfL,YAAY,CAAZA,YAAY,CACZM,QAAQ,CAAE,CACRC,YAAY,CAAE,uBAAM,CAClB,MAAO,CACLN,QAAQ,CAAE,CAAC,CAAC,CACZC,GAAG,CAAE,EAAE,CACPC,MAAM,CAAE,SACV,CAAC,CACH,CAAC,CACDK,cAAc,CAAE,wBAACC,KAAK,CAAEC,MAAM,CAAK,CACjC,oBAA0BA,MAAM,CAACC,OAAO,CAAhCV,QAAQ,iBAARA,QAAQ,CAAEC,GAAG,iBAAHA,GAAG,CACrB,MAAO,CACLD,QAAQ,CAARA,QAAQ,CACRC,GAAG,CAAHA,GAAG,CACHC,MAAM,CAAE,SACV,CAAC,CACH,CAAC,CACDS,WAAW,CAAE,sBAAM,CACjB,MAAO,CACLX,QAAQ,CAAE,CAAC,CAAC,CACZC,GAAG,CAAE,EAAE,CACPC,MAAM,CAAE,MACV,CAAC,CACH,CAAC,CACDU,aAAa,CAAE,uBAACJ,KAAK,CAAEC,MAAM,CAAK,CAChC,GAAMI,WAAU,CAAGJ,MAAM,CAACC,OAAO,CACjC,sCACKF,KAAK,MACRK,UAAU,CAAVA,UAAU,GAEd,CACF,CACF,CAAC,CAAC,CAEF,MAAO,IAAMC,oBAAmB,CAAGX,YAAY,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}