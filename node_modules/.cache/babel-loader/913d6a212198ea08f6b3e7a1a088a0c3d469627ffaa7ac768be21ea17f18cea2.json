{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\uno\\\\src\\\\Components\\\\InputDataList\\\\InputDataSelect.jsx\",\n  _s = $RefreshSig$();\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { Option } from \"../../UI/Option/Option.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputDataSelect = _ref => {\n  _s();\n  let {\n    mapValues,\n    setForm,\n    label,\n    value,\n    values\n  } = _ref;\n  const [input, setInput] = useState(\"\");\n  const handleChange = e => {\n    const target = e.target.value;\n    setInput(target);\n    const newValue = () => {\n      if (mapValues.some(el => el === target)) {\n        setInput(\"\");\n        return value.concat(target);\n      } else {\n        return value;\n      }\n    };\n    setForm(newValue());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.input_container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      list: label,\n      type: \"text\",\n      name: label,\n      value: input,\n      onChange: handleChange,\n      className: styles.form_input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: label,\n      children: mapValues.map(el => {\n        const city = values[el].NAME;\n        return /*#__PURE__*/_jsxDEV(Option, {\n          value: city,\n          label: city\n        }, nanoid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: label,\n      className: styles.form_label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(InputDataSelect, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = InputDataSelect;\nvar _c;\n$RefreshReg$(_c, \"InputDataSelect\");","map":{"version":3,"names":["nanoid","useState","styles","Option","InputDataSelect","mapValues","setForm","label","value","values","input","setInput","handleChange","e","target","newValue","some","el","concat","input_container","form_input","map","city","NAME","form_label"],"sources":["D:/dev/uno/src/Components/InputDataList/InputDataSelect.jsx"],"sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport { Option } from \"../../UI/Option/Option.tsx\";\r\n\r\nexport const InputDataSelect = ({ mapValues, setForm, label, value, values }) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    const target = e.target.value;\r\n    setInput(target);\r\n    const newValue = () => {\r\n      if (mapValues.some((el) => el === target)) {\r\n        setInput(\"\");\r\n        return value.concat(target);\r\n      } else {\r\n        return value;\r\n      }\r\n    };\r\n    setForm(newValue());\r\n  };\r\n\r\n  return (\r\n    <div className={styles.input_container}>\r\n      <input\r\n        list={label}\r\n        type=\"text\"\r\n        name={label}\r\n        value={input}\r\n        onChange={handleChange}\r\n        className={styles.form_input}\r\n      />\r\n      <datalist id={label}>\r\n        {mapValues.map((el) => {\r\n          const city = values[el].NAME;\r\n          return (\r\n              <Option\r\n              value={city}\r\n              label={city}\r\n              key={nanoid()}\r\n            />\r\n          );\r\n        })}\r\n      </datalist>\r\n      <label\r\n        htmlFor={label}\r\n        className={styles.form_label}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,MAAM,QAAQ,4BAA4B;AAAC;AAEpD,OAAO,MAAMC,eAAe,GAAG,QAAkD;EAAA;EAAA,IAAjD;IAAEC,SAAS;IAAEC,OAAO;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAO,CAAC;EAC1E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,MAAM,GAAGD,CAAC,CAACC,MAAM,CAACN,KAAK;IAC7BG,QAAQ,CAACG,MAAM,CAAC;IAChB,MAAMC,QAAQ,GAAG,MAAM;MACrB,IAAIV,SAAS,CAACW,IAAI,CAAEC,EAAE,IAAKA,EAAE,KAAKH,MAAM,CAAC,EAAE;QACzCH,QAAQ,CAAC,EAAE,CAAC;QACZ,OAAOH,KAAK,CAACU,MAAM,CAACJ,MAAM,CAAC;MAC7B,CAAC,MAAM;QACL,OAAON,KAAK;MACd;IACF,CAAC;IACDF,OAAO,CAACS,QAAQ,EAAE,CAAC;EACrB,CAAC;EAED,oBACE;IAAK,SAAS,EAAEb,MAAM,CAACiB,eAAgB;IAAA,wBACrC;MACE,IAAI,EAAEZ,KAAM;MACZ,IAAI,EAAC,MAAM;MACX,IAAI,EAAEA,KAAM;MACZ,KAAK,EAAEG,KAAM;MACb,QAAQ,EAAEE,YAAa;MACvB,SAAS,EAAEV,MAAM,CAACkB;IAAW;MAAA;MAAA;MAAA;IAAA,QAC7B,eACF;MAAU,EAAE,EAAEb,KAAM;MAAA,UACjBF,SAAS,CAACgB,GAAG,CAAEJ,EAAE,IAAK;QACrB,MAAMK,IAAI,GAAGb,MAAM,CAACQ,EAAE,CAAC,CAACM,IAAI;QAC5B,oBACI,QAAC,MAAM;UACP,KAAK,EAAED,IAAK;UACZ,KAAK,EAAEA;QAAK,GACPtB,MAAM,EAAE;UAAA;UAAA;UAAA;QAAA,QACb;MAEN,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACO,eACX;MACE,OAAO,EAAEO,KAAM;MACf,SAAS,EAAEL,MAAM,CAACsB,UAAW;MAAA,UAC5BjB;IAAK;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GA7CWH,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}