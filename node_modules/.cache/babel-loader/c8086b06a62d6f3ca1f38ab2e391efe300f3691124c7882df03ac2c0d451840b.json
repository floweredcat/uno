{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"nanoid\";\nconst initialState = {\n  entities: {},\n  ids: [],\n  status: \"idle\"\n};\nexport const objectsSlice = createSlice({\n  name: \"objects\",\n  initialState,\n  reducers: {\n    startLoading: () => {\n      return {\n        entities: {},\n        ids: [],\n        status: \"loading\"\n      };\n    },\n    successLoading: (state, action) => {\n      const {\n        entities,\n        ids\n      } = action.payload;\n      return {\n        entities,\n        ids,\n        status: \"success\"\n      };\n    },\n    failLoading: () => {\n      return {\n        entities: {},\n        ids: [],\n        status: \"fail\"\n      };\n    },\n    addFranshises: (state, action) => {\n      const franchises = action.payload;\n      return {\n        ...state,\n        franchises\n      };\n    }\n  }\n});\nexport const objectsSliceActions = objectsSlice.actions;","map":{"version":3,"names":["createSlice","nanoid","initialState","entities","ids","status","objectsSlice","name","reducers","startLoading","successLoading","state","action","payload","failLoading","addFranshises","franchises","objectsSliceActions","actions"],"sources":["D:/dev/uno/src/store/Objects/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst initialState = {\r\n  entities: {},\r\n  ids: [],\r\n  status: \"idle\",\r\n};\r\n\r\nexport const objectsSlice = createSlice({\r\n  name: \"objects\",\r\n  initialState,\r\n  reducers: {\r\n    startLoading: () => {\r\n      return {\r\n        entities: {},\r\n        ids: [],\r\n        status: \"loading\",\r\n      };\r\n    },\r\n    successLoading: (state, action) => {\r\n      const { entities, ids } = action.payload;\r\n      return {\r\n        entities,\r\n        ids,\r\n        status: \"success\",\r\n      };\r\n    },\r\n    failLoading: () => {\r\n      return {\r\n        entities: {},\r\n        ids: [],\r\n        status: \"fail\",\r\n      };\r\n    },\r\n    addFranshises: (state, action) => {\r\n      const franchises = action.payload\r\n      return {\r\n        ...state,\r\n        franchises,\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport const objectsSliceActions = objectsSlice.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,CAAC,CAAC;EACZC,GAAG,EAAE,EAAE;EACPC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGN,WAAW,CAAC;EACtCO,IAAI,EAAE,SAAS;EACfL,YAAY;EACZM,QAAQ,EAAE;IACRC,YAAY,EAAE,MAAM;MAClB,OAAO;QACLN,QAAQ,EAAE,CAAC,CAAC;QACZC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDK,cAAc,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAET,QAAQ;QAAEC;MAAI,CAAC,GAAGQ,MAAM,CAACC,OAAO;MACxC,OAAO;QACLV,QAAQ;QACRC,GAAG;QACHC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDS,WAAW,EAAE,MAAM;MACjB,OAAO;QACLX,QAAQ,EAAE,CAAC,CAAC;QACZC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDU,aAAa,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMI,UAAU,GAAGJ,MAAM,CAACC,OAAO;MACjC,OAAO;QACL,GAAGF,KAAK;QACRK;MACF,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAGX,YAAY,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}