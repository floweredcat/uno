{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\uno\\\\src\\\\Components\\\\InputDataList\\\\InputDataSelect.jsx\",\n  _s = $RefreshSig$();\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { Option } from \"../../UI/Option/Option.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputDataSelect = _ref => {\n  _s();\n  let {\n    setForm,\n    label,\n    availableCities,\n    cityFranIds,\n    city\n  } = _ref;\n  const [input, setInput] = useState('');\n  const handleChange = e => {\n    const target = e.target.value;\n    setInput(target);\n    if (cityFranIds.includes(target)) {\n      const newValue = city.concat(target);\n      console.log(newValue);\n      setForm(newValue);\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.input_container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      list: label,\n      type: \"text\",\n      name: label,\n      value: input,\n      onChange: handleChange,\n      className: styles.form_input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: label,\n      children: availableCities.map(el => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          value: el,\n          label: el\n        }, nanoid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: label,\n      className: styles.form_label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(InputDataSelect, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c = InputDataSelect;\nvar _c;\n$RefreshReg$(_c, \"InputDataSelect\");","map":{"version":3,"names":["nanoid","useState","styles","Option","InputDataSelect","setForm","label","availableCities","cityFranIds","city","input","setInput","handleChange","e","target","value","includes","newValue","concat","console","log","input_container","form_input","map","el","form_label"],"sources":["D:/dev/uno/src/Components/InputDataList/InputDataSelect.jsx"],"sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport { Option } from \"../../UI/Option/Option.tsx\";\r\n\r\nexport const InputDataSelect = ({ setForm, label, availableCities, cityFranIds, city }) => {\r\n  const [input, setInput] = useState('');\r\n  const handleChange = (e) => {\r\n    const target = e.target.value;\r\n    setInput(target);\r\n\r\n    if (cityFranIds.includes(target)) {\r\n      const newValue = city.concat(target);\r\n      console.log(newValue)\r\n      setForm(newValue);\r\n      setInput('')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.input_container}>\r\n      <input\r\n        list={label}\r\n        type=\"text\"\r\n        name={label}\r\n        value={input}\r\n        onChange={handleChange}\r\n        className={styles.form_input}\r\n      />\r\n      <datalist id={label}>\r\n        {availableCities.map((el) => {\r\n          return (\r\n            <Option\r\n              value={el}\r\n              label={el}\r\n              key={nanoid()}\r\n            />\r\n          );\r\n        })}\r\n      </datalist>\r\n      <label\r\n        htmlFor={label}\r\n        className={styles.form_label}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,MAAM,QAAQ,4BAA4B;AAAC;AAEpD,OAAO,MAAMC,eAAe,GAAG,QAA4D;EAAA;EAAA,IAA3D;IAAEC,OAAO;IAAEC,KAAK;IAAEC,eAAe;IAAEC,WAAW;IAAEC;EAAK,CAAC;EACpF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,MAAM,GAAGD,CAAC,CAACC,MAAM,CAACC,KAAK;IAC7BJ,QAAQ,CAACG,MAAM,CAAC;IAEhB,IAAIN,WAAW,CAACQ,QAAQ,CAACF,MAAM,CAAC,EAAE;MAChC,MAAMG,QAAQ,GAAGR,IAAI,CAACS,MAAM,CAACJ,MAAM,CAAC;MACpCK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrBZ,OAAO,CAACY,QAAQ,CAAC;MACjBN,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAET,MAAM,CAACmB,eAAgB;IAAA,wBACrC;MACE,IAAI,EAAEf,KAAM;MACZ,IAAI,EAAC,MAAM;MACX,IAAI,EAAEA,KAAM;MACZ,KAAK,EAAEI,KAAM;MACb,QAAQ,EAAEE,YAAa;MACvB,SAAS,EAAEV,MAAM,CAACoB;IAAW;MAAA;MAAA;MAAA;IAAA,QAC7B,eACF;MAAU,EAAE,EAAEhB,KAAM;MAAA,UACjBC,eAAe,CAACgB,GAAG,CAAEC,EAAE,IAAK;QAC3B,oBACE,QAAC,MAAM;UACL,KAAK,EAAEA,EAAG;UACV,KAAK,EAAEA;QAAG,GACLxB,MAAM,EAAE;UAAA;UAAA;UAAA;QAAA,QACb;MAEN,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACO,eACX;MACE,OAAO,EAAEM,KAAM;MACf,SAAS,EAAEJ,MAAM,CAACuB,UAAW;MAAA,UAC5BnB;IAAK;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GA1CWF,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}